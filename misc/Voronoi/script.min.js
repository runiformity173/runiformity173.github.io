let test_points=[{x:300,y:300},{x:100,y:100},{x:200,y:500},{x:250,y:450},{x:600,y:150}],POINTS,POINT_N=7,WIDTH=800,HEIGHT=600,CELLS=[],AUTO_RELAX=!0,NEW_POINTS=[];function voronoi(t){var e=new Voronoi;try{return e.compute(t,{xl:0,xr:800,yt:0,yb:600})}catch{location.reload()}}function getArea(e){var n=e.length;let o=0;for(let t=0;t<n;t++){var r=e[t],a=e[(t+1)%n];o+=r[0]*a[1]-a[0]*r[1]}return o/2}function findCentroid(e){var n=e.length;let o=0,r=0,a=0;for(let t=0;t<n;t++){var i=e[t],l=e[(t+1)%n],c=i[0]*l[1]-l[0]*i[1];o+=(i[0]+l[0])*c,r+=(i[1]+l[1])*c,a+=c}var t=a/2;return{x:o/(6*t),y:r/(6*t)}}Array.prototype.includes2=function(e){for(var n of this){let t=0;for(l in e)l in n&&n[l]==e[l]&&t++;if(2==t)return!0}return!1};const canvas=document.getElementById("output");canvas.width=WIDTH,canvas.height=HEIGHT;const ctx=canvas.getContext("2d");function order(t){const r=t.reduce((t,[e,n])=>[t[0]+e,t[1]+n],[0,0]);return r[0]/=t.length,r[1]/=t.length,t.sort(([t,e],[n,o])=>{return Math.atan2(e-r[1],t-r[0])-Math.atan2(o-r[1],n-r[0])}),t}function hslToHex(t,e,n){var o=t/60,e=(t=(1-Math.abs(2*n-1))*e)*(1-Math.abs(o%2-1)),n=n-t/2;let r,a,i;return[r,a,i]=0<=o&&o<1?[t,e,0]:1<=o&&o<2?[e,t,0]:2<=o&&o<3?[0,t,e]:3<=o&&o<4?[0,e,t]:4<=o&&o<5?[e,0,t]:[t,0,e],r=Math.round(255*(r+n)).toString(16).padStart(2,"0"),a=Math.round(255*(a+n)).toString(16).padStart(2,"0"),i=Math.round(255*(i+n)).toString(16).padStart(2,"0"),"#"+r+a+i}function getDistinctColors(e){var n=360/e;const o=[];for(let t=0;t<Math.ceil(e);t++)o.push(hslToHex(t*n,1,.5));return o}function display(t=!1,e=!0){if(t)for(e&&(POINTS=CELLS.map(findCentroid));POINTS.length<POINT_N;)POINTS.push(NEW_POINTS.pop());else{CELLS=[],POINT_N=Number(document.getElementById("point-n").value),POINTS=[];for(let t=0;t<POINT_N;t++)POINTS.push({x:Math.random()*WIDTH,y:Math.random()*HEIGHT})}document.getElementById("point-display").innerHTML=POINTS.length,ctx.clearRect(0,0,canvas.width,canvas.height);var n=voronoi(POINTS),o=getDistinctColors(POINT_N);for(let t=0;t<POINT_N;t++){var r=n.cells[t];r||console.log(r,t,POINT_N,POINTS),ctx.fillStyle=o[t];r=r.halfedges;const d=[];for(const u of r)d.includes([u.edge.va.x,u.edge.va.y])||d.push([u.edge.va.x,u.edge.va.y]),d.includes([u.edge.vb.x,u.edge.vb.y])||d.push([u.edge.vb.x,u.edge.vb.y]);order(d),CELLS[t]=d,ctx.beginPath();d[0];for(let t=1;t<d.length;t++){1==t&&ctx.moveTo(d[0][0],d[0][1]);var a=d[t];ctx.lineTo(a[0],a[1]),d[t]}ctx.closePath(),ctx.fill()}for(let t=0;t<n.edges.length;t++){var i=n.edges[t];i.va&&i.vb&&(ctx.beginPath(),ctx.moveTo(i.va.x,i.va.y),ctx.lineTo(i.vb.x,i.vb.y),ctx.stroke())}let l=CELLS.map(getArea);var c=Math.round(l.reduce((t,e)=>t+e,0)/POINT_N);document.getElementById("average-area").innerHTML=c,document.getElementById("stdev-area").innerHTML=Math.round(Math.sqrt(l.map(t=>Math.pow(t-c,2)).reduce((t,e)=>t+e)/POINT_N))}function update(){AUTO_RELAX&&display(!0),requestAnimationFrame(update)}function getMousePos(t){const e=document.getElementById("output");var n=e.getBoundingClientRect(),o=(t.clientX-n.left)*(e.width/n.width);return[(t.clientY-n.top)*(e.height/n.height),o]}ctx.strokeStyle="white",display(),document.getElementById("output").addEventListener("click",function(t){t=getMousePos(t);POINTS.includes2({x:t[1],y:t[0]})||(NEW_POINTS.push({x:t[1],y:t[0]}),POINT_N++),display(!0,!1)}),document.getElementById("output").addEventListener("contextmenu",function(t){t.preventDefault();var e=getMousePos(t);let n=1/0,o=0;for(let t=0;t<POINT_N;t++){var r=Math.pow(e[0]-POINTS[t].y,2)+Math.pow(e[1]-POINTS[t].x,2);r<n&&(n=r,o=t)}return CELLS.splice(o,1),POINTS.splice(o,1),POINT_N--,display(!0,!1),!1}),requestAnimationFrame(update);